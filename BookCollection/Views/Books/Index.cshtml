@model PagedList.IPagedList<BookCollection.Models.Book>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Books";
}

<div class="row">
    <div class="col-md-6"><h2>@ViewBag.Title</h2></div>
    <div class="col-md-6">
        <div class="pull-right" style="margin:25px 5px 0 0">
            @BC.IconButton("Books", "Create", "plus", "Add new book")
        </div>
    </div>
</div>

@using (Html.BeginForm("Index", "Books", FormMethod.Get))
{
    <p>
        Category: @Html.DropDownList("BookCategory", "All")
        Title or Author: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        Serie: @Html.DropDownList("Serie", "All")
        <input type="submit" value="Filter" />
    </p>
}

<table class="table table-hover table-condensed">
    <tr>
        <th>
        </th>
        <th>
            <!-- Actio Link is overriden to add sort icons when sortKey is available in route -->
            @Html.ActionLink("Title", "Index", new { sortKey = "name", currentFilter = ViewBag.CurrentFilter, currentSort = ViewBag.CurrentSort })
        </th>
        <th>
            @Html.ActionLink("Author", "Index", new { sortKey = "author", currentFilter = ViewBag.CurrentFilter, currentSort = ViewBag.CurrentSort })
        </th>
        <th>
            @Html.ActionLink("Publisher", "Index", new { sortKey = "publisher", sortOrder = ViewBag.PublisherSortParm, currentFilter = ViewBag.CurrentFilter, currentSort = ViewBag.CurrentSort })
        </th>
        <th>
            @Html.ActionLink("Year", "Index", new { sortKey = "year", sortOrder = ViewBag.YearSortParm, currentFilter = ViewBag.CurrentFilter, currentSort = ViewBag.CurrentSort })
        </th>
        <th>
            @Html.ActionLink("Category", "Index", new { sortKey = "category", sortOrder = ViewBag.CategorySortParm, currentFilter = ViewBag.CurrentFilter, currentSort = ViewBag.CurrentSort })
        </th>
        <th>
            @Html.ActionLink("Serie", "Index", new { sortKey = "serie", sortOrder = ViewBag.SerieSortParm, currentFilter = ViewBag.CurrentFilter, currentSort = ViewBag.CurrentSort })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td class="text-nowrap">
                <img class="booktool" src="~/Images/Flags/@Html.Raw(item.Language)@Html.Raw(".png")" alt="Taal: @Html.Raw(item.Language)" data-toggle="tooltip" data-placement="top" title="Taal: @Html.Raw(item.Language)" />

                @BC.MaterialBadge(item.Material)

                @BC.BoolIcon(item.Read, "Gelezen", "Niet gelezen")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MainAuthor)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Publisher.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ActualPrintYear)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Serie)
            </td>
            <td class="text-nowrap">
                @BC.IconButton("Books", "Edit", "pencil", "Edit", item.BookID)
                @BC.IconButton("Books", "Details", "eye-open", "Details", item.BookID)
                @BC.IconButton("Books", "Delete", "remove", "Delete", item.BookID)
            </td>
        </tr>
    }

</table>


Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
